{"version":3,"sources":["logo.svg","charts/Daily.js","charts/today/VolumeProfileSeries.js","charts/today/Chart.js","connectors/api.js","charts/today/Today.js","charts/groups/Header.js","charts/groups/Chart.js","charts/groups/MultiChart.js","charts/groups/Group.js","charts/SChart/Candle/Chart.js","charts/SChart/Candle/utils.js","charts/SChart/Candle/index.js","App.js","reportWebVitals.js","index.js"],"names":["getPath","PureComponent","x","y","width","height","PosNegColorBar","props","fill","c","d","stroke","fillOpacity","DailyChart","daily","React","useState","moveX","state","_setState","setState","obj","st","Object","assign","moveMove","activeTooltipIndex","moveLeave","console","log","style","textAlign","close","vol","buyVol","sellVol","volRsi","volRsiChg","rsi","rsiChg","LineChart","data","syncId","margin","top","right","left","bottom","onMouseMove","onMouseLeave","CartesianGrid","XAxis","dataKey","scale","interval","tickSize","YAxis","yAxisId","type","name","unit","domain","Tooltip","content","Line","dot","ComposedChart","tick","Bar","stackId","barSize","orientation","hide","ReferenceLine","shape","Brush","Daily","ticket","intra","waiting","onSubmit","event","preventDefault","toUpperCase","requestOptions","method","headers","body","JSON","stringify","tic","fetch","then","response","json","status","error","payload","catch","value","onChange","target","disabled","VolumeProfileSeries","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","helper","this","rects","sessionBg","opacity","sessionBackGround","sessionBackGroundOpacity","showSessionBackground","fillStyle","hexToRGBA","forEach","each","beginPath","rect","closePath","w1","w2","stroke1","stroke2","fill1","fill2","strokeStyle","svgDraw","canvasDraw","canvasToDraw","getAxisCanvas","drawOn","className","sessionBgSvg","map","idx","i","Component","realXScale","xScale","yScale","chartConfig","plotData","sessionStart","bySession","partialStartOK","partialEndOK","bins","maxProfileWidthPercent","source","volume","absoluteChange","orient","sessionBuilder","accumulatingWindow","discardTillStart","discardTillEnd","accumulateTill","accumulator","identity","dx","length","head","sessions","allRects","session","begin","finish","last","sessionWidth","histogram2","d3Histogram","thresholds","rollup","nest","key","direction","sortKeys","descending","ascending","leaves","sum","values","volumeInBins","arr","entries","volumeValues","start","end","scaleLinear","max","range","totalVolumes","volumes","totalVolume","totalVolumeX","base","ws","Math","abs","zip","x1","x0","functor","merge","defaultProps","date","getMonth","VolumeProfileBySessionChart","saveNode","resetYDomain","handleReset","suffix","node","change","initialData","ratio","priceChartHeight","volChartHeight","indexChartHeight","smaVolume50","sma","id","options","windowSize","sourcePath","accessor","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","displayXAccessor","xExtents","scaleOrdinal","schemeCategory10","set","region","ref","seriesName","yExtents","high","low","axisAt","showTicks","ticks","at","displayFormat","format","yAccessor","fitval","defined","isNaN","fitCurve","itemType","edgeAt","open","origin","onReset","volumn","w","h","tickFormat","unkVol","widthRatio","outerTickSize","overSold","overBought","middle","insideThreshold","fitWidth","_URL","_dopost","endpoint","opts","_WS","TodayChart","Chart","Today","setData","getData","live","tillDate","refetch","refresh","Date","time","finally","e","onClick","Header","groups","activeTab","onTabClick","tab","grp","MiniChart","getLive","getTicketPrice","isFav","socket","emit","op","params","MultiChart","tickets","favorites","includes","_FAV_","_FOCUS_","_setGroup","groupNames","_setGroupName","logmsg","refetchHistory","setSocket","setAppdb","addGroup","Set","useEffect","keys","err","newWs","connected","io","on","msg","fav","updatePrice","checked","CandleStickChartWithZoomPan","mouseMoveEvent","panEvent","zoomEvent","zoomAnchor","clamp","yGrid","innerTickSize","tickStrokeOpacity","xGrid","zoomEnabled","timeFormat","parseDate","timeParse","ChartComponent","text","tsvParse","parse","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a53df7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { PureComponent } from 'react';\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Scatter,\r\n  ResponsiveContainer,\r\n  ReferenceLine,\r\n  Brush,\r\n  LineChart,\r\n  BarChart,\r\n  Cell,\r\n} from 'recharts';\r\nimport { scaleLog } from 'd3-scale';\r\n\r\n// import intraData from '../data/intra.json';\r\n// const intra = JSON.parse(intraData);\r\n\r\n// const data = [\r\n//   {\r\n//     name: 'Page A',\r\n//     uv: 590,\r\n//     pv: 0,\r\n//     amt: 1400,\r\n//     cnt: 490,\r\n//   },\r\n//   {\r\n//     name: 'Page B',\r\n//     uv: 868,\r\n//     pv: 0,\r\n//     amt: 1506,\r\n//     cnt: 590,\r\n//   },\r\n//   {\r\n//     name: 'Page C',\r\n//     uv: 0,\r\n//     pv: 10098,\r\n//     amt: 989,\r\n//     cnt: 350,\r\n//   },\r\n//   {\r\n//     name: 'Page D',\r\n//     uv: 1480,\r\n//     pv: 0,\r\n//     amt: 1228,\r\n//     cnt: 480,\r\n//   },\r\n//   {\r\n//     name: '',\r\n//     uv: 0,\r\n//     pv: 1108,\r\n//     amt: 1100,\r\n//     cnt: 460,\r\n//   },\r\n//   {\r\n//     name: 'Page F',\r\n//     uv: 0,\r\n//     pv: 680,\r\n//     amt: 1700,\r\n//     cnt: 380,\r\n//   },\r\n// ];\r\n\r\n// const scale = scaleLog().base(Math.E);\r\n\r\nconst data = [\r\n  {label: 'aaa', mp: 10, vol: 20, buyVol: 0, sellVol: 20, unkVol:0},\r\n  {label: '', mp: 11, vol: 30, buyVol: 30, sellVol: 0, unkVol:0},\r\n  {label: '', mp: 12, vol: 40, buyVol: 40, sellVol: 0, unkVol:0},\r\n  {label: 'bbb', mp: 13, vol: 10, buyVol: 0, sellVol: 0, unkVol:10},\r\n]\r\n\r\nclass CustomizedLabel extends PureComponent {\r\n    render() {\r\n      const { x, y, stroke, value } = this.props;\r\n      console.log(x,y,stroke, value)\r\n    \r\n      if (value == 0) return null;\r\n      return (\r\n        <text x={x} y={y} dy={-4} fill={stroke} fontSize={10} textAnchor=\"middle\">\r\n          {value}\r\n        </text>\r\n      );\r\n    }\r\n}\r\n\r\nclass CustomizedAxisTick extends PureComponent {\r\n    render() {\r\n      const { x, y, stroke, payload } = this.props;\r\n      console.log(x,y,payload.value)\r\n  \r\n      return (\r\n        <g transform={`translate(${x},${y})`}>\r\n          <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">\r\n            {payload.value}\r\n          </text>\r\n        </g>\r\n      );\r\n    }\r\n}\r\n\r\nconst VolumnTooltip = ({ active, payload, label }) => {\r\n  // console.log('tool', active, payload, label)\r\n  if (active && payload && payload.length) {\r\n    let vol = 0;\r\n    let kind = '';\r\n    for (const p of payload) {\r\n      if (p.value != 0) {\r\n        vol = p.value;\r\n        kind = p.name;\r\n      }\r\n    }\r\n    // vol = Math.ceil(Math.pow(2, vol))\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        {/* <p className='label'>{payload[3].value}</p> */}\r\n        <p className=\"label\">{`${kind} : ${vol}`}</p>\r\n        {/* <p className=\"intro\">{getIntroOfPage(label)}</p> */}\r\n        {/* <p className=\"desc\">Anything you want can be displayed here.</p> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n\r\nconst getPath = (x, y, width, height) => `M ${x},${y} h ${width} v ${height} h -${width} Z`;\r\nconst backgroundColorFn = ({x,y,width,height, buyVol, sellVol}) => {\r\n  const fill = (buyVol>0) ? \"#c6ebc9\" : (sellVol>0) ? \"#f4c983\" : \"\";\r\n  if (fill === '') return null;\r\n  return <path x={x} y={y} width={width} height={height} fill={fill} className=\"recharts-rectangle recharts-bar-background-rectangle\" radius=\"0\" d={getPath(x, y, width, height)}></path>\r\n}\r\n\r\nconst PosNegColorBar = (props) => {\r\n  const { fill, x, y, width, height } = props;\r\n  // console.log(fill, x, y, width, height)\r\n  let c = height > 0 ? \"#70af85\" : \"#e40017\";\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={c} fillOpacity=\"0.3\"/>;\r\n};\r\n\r\nconst DailyChart = ({daily}) => {\r\n  const [state, _setState] = React.useState({moveX:-1})\r\n  const setState = (obj) => {\r\n    _setState(st => Object.assign({}, st, obj))\r\n  }\r\n\r\n  const moveMove = (obj) => {\r\n    // console.log(obj)\r\n    if (obj != null & obj.activeTooltipIndex != null) setState({moveX: obj.activeTooltipIndex})\r\n  }\r\n  const moveLeave = () => { setState({moveX: -1}) }\r\n\r\n  console.log(\"daily\", daily)\r\n\r\n  return (\r\n      <div>\r\n        {state.moveX < 0 ? <p style={{textAlign:'left'}}> Close....</p> :\r\n          <p style={{textAlign:'left'}}>\r\n            <span>Close: {daily[state.moveX].close} </span>\r\n            <span>Vol {daily[state.moveX].vol} ({daily[state.moveX].buyVol} - {daily[state.moveX].sellVol}) </span>\r\n            <span>volRSI {daily[state.moveX].volRsi} ({daily[state.moveX].volRsiChg}) </span>\r\n            <span>RSI {daily[state.moveX].rsi} ({daily[state.moveX].rsiChg})</span>\r\n          </p>}\r\n\r\n        <LineChart\r\n            width={800}\r\n            height={200}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 0,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n            onMouseMove={moveMove}\r\n            onMouseLeave={moveLeave}\r\n          >\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n        <XAxis dataKey=\"label\" scale=\"auto\" interval={0} tickSize={7} tickSize={0} /> \r\n        <YAxis yAxisId=\"left\" type=\"number\" dataKey=\"close\" name=\"Price\" unit=\"k\" stroke=\"#8884d8\" domain={['auto', 'auto']}/>\r\n        <Tooltip content={() => null} />\r\n        <Line type=\"basic\" yAxisId=\"left\" dataKey=\"close\" dot={false} stroke=\"#ff7300\" />\r\n      </LineChart>\r\n\r\n      <ComposedChart\r\n            width={800}\r\n            height={150}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 0,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n            onMouseMove={moveMove}\r\n            onMouseLeave={moveLeave}\r\n          >\r\n        <XAxis dataKey=\"label\" tick={false}  /> \r\n        <YAxis\r\n          yAxisId=\"right\"\r\n          type=\"number\"\r\n          dataKey=\"vol\"\r\n          name=\"Volumn\"\r\n          unit=\"\"\r\n          // orientation=\"right\"\r\n          stroke=\"#82ca9d\"\r\n          domain={['auto','auto']}\r\n        />\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"buyVol\" barSize={5} fill=\"#70af85\" />\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"sellVol\" barSize={5} fill=\"#e40017\" />\r\n        <Line type=\"basic\" yAxisId=\"right\" dataKey=\"volAvg\" dot={false} stroke=\"#ff7300\" />\r\n        <Tooltip content={() => null} />\r\n        {/* <Tooltip /> */}\r\n      </ComposedChart>\r\n\r\n      <ComposedChart\r\n            width={800}\r\n            height={100}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 0,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n            onMouseMove={moveMove}\r\n            onMouseLeave={moveLeave}\r\n          >\r\n        <XAxis dataKey=\"day\" tick={false} /> \r\n        <YAxis type=\"number\" yAxisId=\"left\" dataKey=\"volRsi\" name=\"Price\" unit=\"k\" stroke=\"#8884d8\" />\r\n        <YAxis type=\"number\" yAxisId=\"right\" dataKey=\"volRsiChg\" orientation='right' hide={true} name=\"Price\" unit=\"k\" stroke=\"#8884d8\" />\r\n        <Tooltip content={() => null} />\r\n        {/* <Tooltip /> */}\r\n\r\n        <Line type=\"basic\" yAxisId=\"left\" dataKey=\"volRsi\" dot={false} stroke=\"#70af85\" />\r\n        <ReferenceLine y={50} yAxisId='left' />\r\n        <ReferenceLine y={75} yAxisId='left'/>\r\n\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"volRsiChg\" barSize={5} fill=\"#70af85\"\r\n          shape={<PosNegColorBar />}/>\r\n      </ComposedChart>\r\n      \r\n      {/* <BarChart\r\n            width={800}\r\n            height={100}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n        <XAxis dataKey=\"day\" tick={false}  /> \r\n        <YAxis\r\n          yAxisId=\"right\"\r\n          type=\"number\"\r\n          dataKey=\"volRsiChg\"\r\n          name=\"Volumn\"\r\n          unit=\"\"\r\n          stroke=\"#82ca9d\"\r\n        />\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"volRsiChg\" barSize={5} fill=\"#70af85\" />\r\n        <Tooltip />\r\n      </BarChart> */}\r\n\r\n      <ComposedChart\r\n            width={800}\r\n            height={150}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 0,\r\n              right: 0,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n            onMouseMove={moveMove}\r\n            onMouseLeave={moveLeave}\r\n          >\r\n        <XAxis dataKey=\"day\" tick={false} /> \r\n        <YAxis type=\"number\" dataKey=\"rsi\" name=\"Price\" unit=\"k\" stroke=\"#8884d8\" />\r\n        <Tooltip content={() => null} />\r\n        {/* <Tooltip /> */}\r\n        <Line type=\"basic\" dataKey=\"rsi\" dot={false} stroke=\"#70af85\" />\r\n        <ReferenceLine y={70} />\r\n        <ReferenceLine y={50} />\r\n        <ReferenceLine y={30} />\r\n\r\n        <YAxis\r\n          yAxisId=\"right\"\r\n          type=\"number\"\r\n          dataKey=\"rsiChg\"\r\n          name=\"Volumn\"\r\n          unit=\"\"\r\n          orientation=\"right\"\r\n          stroke=\"#82ca9d\"\r\n          hide={true}\r\n        />\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"rsiChg\" barSize={5} fill=\"#70af85\" shape={<PosNegColorBar />}/>\r\n        <ReferenceLine yAxisId=\"right\" y={0} />\r\n\r\n        <Brush/>\r\n\r\n      </ComposedChart>\r\n\r\n        {/* <BarChart\r\n            width={800}\r\n            height={100}\r\n            data={daily}\r\n            syncId=\"anyId\"\r\n            margin={{\r\n              top: 10,\r\n              right: 30,\r\n              left: 0,\r\n              bottom: 0,\r\n            }}\r\n          >\r\n        <XAxis dataKey=\"day\" tick={false}  /> \r\n        <YAxis\r\n          yAxisId=\"right\"\r\n          type=\"number\"\r\n          dataKey=\"rsiChg\"\r\n          name=\"Volumn\"\r\n          unit=\"\"\r\n          // orientation=\"right\"\r\n          stroke=\"#82ca9d\"\r\n        />\r\n        <Bar stackId='vol' yAxisId=\"right\" dataKey=\"rsiChg\" barSize={5} fill=\"#70af85\" shape={<PosNegColorBar />}/>\r\n        <Tooltip />\r\n        <ReferenceLine yAxisId=\"right\" y={0} />\r\n      </BarChart> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n// const getIntra = (event) => {\r\n//   event.preventDefault();\r\n//   console.log(event);\r\n//   return;\r\n//   const requestOptions = {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ tic: 'EVG' })\r\n//   };\r\n//   fetch('http://localhost:5000/intra', requestOptions)\r\n//       .then(response => response.json())\r\n//       .then(data => console.log('post response', data));\r\n// }\r\n\r\n\r\nconst Daily = () => {\r\n  const [state, _setState] = React.useState({ticket:'', intra:null, waiting: false})\r\n\r\n  // const setState = (obj) => {\r\n  //   let newState = Object.assign({}, state, obj)\r\n  //   console.log(\"newstate\", obj, newState)\r\n  //   _setState(newState)\r\n  // }\r\n  const setState = (obj) => {\r\n    console.log(\"set State\", obj, state);\r\n    _setState(st => Object.assign({}, st, obj))\r\n  }\r\n\r\n  const getIntra = (event) => {\r\n    event.preventDefault();\r\n    console.log(state.ticket.toUpperCase(), state.intra);\r\n    setState({waiting: true})\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ tic: state.ticket })\r\n    };\r\n    fetch('http://localhost:5000/daily', requestOptions)\r\n        .then(response => {\r\n          console.log(response.body);\r\n          return response.json()})\r\n        .then(data => {\r\n          if (data.status != 'ok') console.error('Error', data)\r\n          else setState({intra: data.payload, waiting: false})\r\n          console.log(state, data)\r\n        })\r\n        .catch(() => setState({waiting: false}))\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ticket: event.target.value.toUpperCase()})\r\n  }\r\n\r\n  return <div>\r\n    {/* <button onClick={testpost}>Clickme</button> */}\r\n    <form onSubmit={getIntra} >\r\n      <fieldset>\r\n        <label>\r\n          <p>Ticket</p>\r\n          <input name=\"tic\" value={state.ticket} onChange={handleChange} />\r\n        </label>\r\n      </fieldset>\r\n      <button type=\"submit\" disabled={state.waiting} >Submit</button>\r\n    </form>\r\n    {(state.intra != null) ? <DailyChart daily={state.intra}/> : null}\r\n  </div>\r\n}\r\n\r\nexport default Daily;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ascending, descending, sum, max, merge, zip, histogram as d3Histogram } from \"d3-array\";\r\nimport { nest } from \"d3-collection\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nimport GenericChartComponent from \"react-stockcharts/lib/GenericChartComponent\";\r\nimport { getAxisCanvas } from \"react-stockcharts/lib/GenericComponent\";\r\n\r\nimport { head, last, hexToRGBA, accumulatingWindow, identity, functor } from \"react-stockcharts/lib/utils\";\r\n\r\nclass VolumeProfileSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n        console.log('sessionProps', props)\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor, width } = moreProps;\r\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\r\n\r\n\t\tdrawOnCanvas(ctx, this.props, rects, sessionBg);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { className, opacity } = this.props;\r\n\t\tconst { showSessionBackground, sessionBackGround, sessionBackGroundOpacity } = this.props;\r\n\r\n\t\tconst { xAccessor, width } = moreProps;\r\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\r\n\r\n\t\tconst sessionBgSvg = showSessionBackground\r\n\t\t\t? sessionBg.map((d, idx) => <rect key={idx} {...d} opacity={sessionBackGroundOpacity} fill={sessionBackGround} />)\r\n\t\t\t: null;\r\n\r\n\t\treturn <g className={className}>\r\n\t\t\t{sessionBgSvg}\r\n\t\t\t{rects.map((d, i) => <g key={i}>\r\n\t\t\t\t<rect x={d.x} y={d.y}\r\n\t\t\t\t\twidth={d.w1} height={d.height}\r\n\t\t\t\t\tfill={d.fill1} stroke={d.stroke1} fillOpacity={opacity} />\r\n\t\t\t\t<rect x={d.x + d.w1} y={d.y}\r\n\t\t\t\t\twidth={d.w2} height={d.height}\r\n\t\t\t\t\tfill={d.fill2} stroke={d.stroke2} fillOpacity={opacity} />\r\n\t\t\t</g>)}\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\nVolumeProfileSeries.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\topacity: PropTypes.number,\r\n\tshowSessionBackground: PropTypes.bool,\r\n\tsessionBackGround: PropTypes.string,\r\n\tsessionBackGroundOpacity: PropTypes.number,\r\n};\r\n\r\n\r\nVolumeProfileSeries.defaultProps = {\r\n\tclassName: \"line \",\r\n\tbins: 20,\r\n\topacity: 0.5,\r\n\tmaxProfileWidthPercent: 50,\r\n\tfill: ({ type }) => type === \"up\" ? \"#6BA583\" : \"#FF0000\",\r\n\tstroke: \"#FFFFFF\",\r\n\tshowSessionBackground: false,\r\n\tsessionBackGround: \"#4682B4\",\r\n\tsessionBackGroundOpacity: 0.3,\r\n\r\n\tsource: d => d.close,\r\n\tvolume: d => d.volume,\r\n\tabsoluteChange: d => d.absoluteChange,\r\n\tbySession: false,\r\n\t/* eslint-disable no-unused-vars */\r\n\tsessionStart: ({ d, i, plotData }) => i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\r\n\t// sessionStart: ({ d, i, plotData }) => i > 0 && d.date.getDay() === 1,\r\n\t/* eslint-enable no-unused-vars */\r\n\torient: \"left\",\r\n\t// // fill: ({ type }) => { var c = type === \"up\" ? \"#6BA583\" : \"#FF0000\"; console.log(type, c); return c },\r\n\t// stroke: ({ type }) =>  type === \"up\" ? \"#6BA583\" : \"#FF0000\",\r\n\t// stroke: \"none\",\r\n\tpartialStartOK: true,\r\n\tpartialEndOK: true,\r\n};\r\n\r\nfunction helper(props, moreProps, xAccessor, width) {\r\n\tconst { xScale: realXScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\tconst { sessionStart, bySession, partialStartOK, partialEndOK } = props;\r\n\tconst { bins, maxProfileWidthPercent, source, volume, absoluteChange, orient, fill, stroke } = props;\r\n\r\n    console.log('sessionStart', sessionStart)\r\n\tconst sessionBuilder = accumulatingWindow()\r\n\t\t.discardTillStart(!partialStartOK)\r\n\t\t.discardTillEnd(!partialEndOK)\r\n\t\t.accumulateTill((d, i) => {\r\n\t\t\treturn sessionStart({ d, i, ...moreProps });\r\n\t\t})\r\n\t\t.accumulator(identity);\r\n\r\n\tconst dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor(head(plotData))) : 0;\r\n\r\n\tconst sessions = bySession ? sessionBuilder(plotData) : [plotData];\r\n    console.log('sessions', sessions)\r\n    // console.log('head', head)\r\n    // console.log('last', last)\r\n    console.log('plotData', plotData)\r\n\r\n\tconst allRects = sessions.map(session => {\r\n\r\n\t\tconst begin = bySession ? realXScale(xAccessor(head(session))) : 0;\r\n\t\tconst finish = bySession ? realXScale(xAccessor(last(session))) : width;\r\n\t\tconst sessionWidth = finish - begin + dx;\r\n\r\n\t\t// console.log(session)\r\n\r\n\t\t/* var histogram = d3.layout.histogram()\r\n\t\t\t\t.value(source)\r\n\t\t\t\t.bins(bins);*/\r\n\r\n\t\tconst histogram2 = d3Histogram()\r\n\t\t\t// .domain(xScale.domain())\r\n\t\t\t.value(source)\r\n\t\t\t.thresholds(bins);\r\n\r\n\t\t// console.log(bins, histogram(session))\r\n\t\t// console.log(bins, histogram2(session))\r\n\t\tconst rollup = nest()\r\n\t\t\t.key(d => d.direction)\r\n\t\t\t.sortKeys(orient === \"right\" ? descending : ascending)\r\n\t\t\t.rollup(leaves => sum(leaves, d => d.volume));\r\n\r\n\t\tconst values = histogram2(session);\r\n\t\t// console.log(\"values\", values)\r\n\r\n\t\tconst volumeInBins = values\r\n\t\t\t.map(arr => arr.map(d => absoluteChange(d) > 0 ? { direction: \"up\", volume: volume(d) } : { direction: \"down\", volume: volume(d) }))\r\n\t\t\t.map(arr => rollup.entries(arr));\r\n\r\n\t\t// console.log(\"volumeInBins\", volumeInBins)\r\n\t\tconst volumeValues = volumeInBins\r\n\t\t\t.map(each => sum(each.map(d => d.value)));\r\n\r\n\t\t// console.log(\"volumeValues\", volumeValues)\r\n\t\tconst base = xScale => head(xScale.range());\r\n\r\n\t\tconst [start, end] = orient === \"right\"\r\n\t\t\t? [begin, begin + sessionWidth * maxProfileWidthPercent / 100]\r\n\t\t\t: [finish, finish - sessionWidth * (100 - maxProfileWidthPercent) / 100];\r\n\r\n\t\tconst xScale = scaleLinear()\r\n\t\t\t.domain([0, max(volumeValues)])\r\n\t\t\t.range([start, end]);\r\n\r\n\t\t// console.log(xScale.domain())\r\n\r\n\t\tconst totalVolumes = volumeInBins.map(volumes => {\r\n\r\n\t\t\tconst totalVolume = sum(volumes, d => d.value);\r\n\t\t\tconst totalVolumeX = xScale(totalVolume);\r\n\t\t\tconst width = base(xScale) - totalVolumeX;\r\n\t\t\tconst x = width < 0 ? totalVolumeX + width : totalVolumeX;\r\n\r\n\t\t\tconst ws = volumes.map(d => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: d.key,\r\n\t\t\t\t\twidth: d.value * Math.abs(width) / totalVolume,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn { x, ws, totalVolumeX };\r\n\t\t});\r\n\t\t// console.log(\"totalVolumes\", totalVolumes)\r\n\r\n\t\tconst rects = zip(values, totalVolumes)\r\n\t\t\t.map(([d, { x, ws }]) => {\r\n\t\t\t\tconst w1 = ws[0] || { type: \"up\", width: 0 };\r\n\t\t\t\tconst w2 = ws[1] || { type: \"down\", width: 0 };\r\n\r\n\t\t\t\t// console.log('rects', d, x, width, w1, w2)\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t// y: yScale(d.x + d.dx),\r\n\t\t\t\t\ty: yScale(d.x1),\r\n\t\t\t\t\t// height: yScale(d.x - d.dx) - yScale(d.x),\r\n\t\t\t\t\theight: yScale(d.x1) - yScale(d.x0),\r\n\t\t\t\t\tx,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\tw1: w1.width,\r\n\t\t\t\t\tw2: w2.width,\r\n\t\t\t\t\tstroke1: functor(stroke)(w1),\r\n\t\t\t\t\tstroke2: functor(stroke)(w2),\r\n\t\t\t\t\tfill1: functor(fill)(w1),\r\n\t\t\t\t\tfill2: functor(fill)(w2),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// console.log(\"rects\", rects)\r\n\r\n\t\tconst sessionBg = {\r\n\t\t\tx: begin,\r\n\t\t\ty: last(rects).y,\r\n\t\t\theight: head(rects).y - last(rects).y + head(rects).height,\r\n\t\t\twidth: sessionWidth,\r\n\t\t};\r\n\r\n\t\treturn { rects, sessionBg };\r\n\t});\r\n\r\n\treturn {\r\n\t\trects: merge(allRects.map(d => d.rects)),\r\n\t\tsessionBg: allRects.map(d => d.sessionBg),\r\n\t};\r\n}\r\n\r\n\r\nfunction drawOnCanvas(ctx, props, rects, sessionBg) {\r\n\tconst { opacity, sessionBackGround, sessionBackGroundOpacity, showSessionBackground } = props;\r\n\r\n\t// var { rects, sessionBg } = helper(props, xScale, yScale, plotData);\r\n\r\n\tif (showSessionBackground) {\r\n\t\tctx.fillStyle = hexToRGBA(sessionBackGround, sessionBackGroundOpacity);\r\n\r\n\t\tsessionBg.forEach(each => {\r\n\t\t\tconst { x, y, height, width } = each;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, width, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t});\r\n\t}\r\n\r\n\trects.forEach(each => {\r\n\t\tconst { x, y, height, w1, w2, stroke1, stroke2, fill1, fill2 } = each;\r\n\r\n\r\n\t\tif (w1 > 0) {\r\n\t\t\tctx.fillStyle = hexToRGBA(fill1, opacity);\r\n\t\t\tif (stroke1 !== \"none\") ctx.strokeStyle = stroke1;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, w1, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tif (stroke1 !== \"none\") ctx.stroke();\r\n\t\t}\r\n\r\n\t\tif (w2 > 0) {\r\n\t\t\tctx.fillStyle = hexToRGBA(fill2, opacity);\r\n\t\t\tif (stroke2 !== \"none\") ctx.strokeStyle = stroke2;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x + w1, y, w2, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tif (stroke2 !== \"none\") ctx.stroke();\r\n\t\t}\r\n\r\n\t});\r\n}\r\n\r\nexport default VolumeProfileSeries;","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { set } from \"d3-collection\";\r\nimport { scaleOrdinal, schemeCategory10, scalePoint } from  \"d3-scale\";\r\n\r\nimport { ChartCanvas, Chart, ZoomButtons } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tStackedBarSeries,\r\n\t// VolumeProfileSeries,\r\n\tCandlestickSeries,\r\n\tLineSeries,\r\n\tAreaSeries,\r\n\tRSISeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport VolumeProfileSeries from './VolumeProfileSeries';\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n\tEdgeIndicator,\r\n} from \"react-stockcharts/lib/coordinates\";\r\nimport { ema, rsi, sma, atr } from \"react-stockcharts/lib/indicator\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n\tRSITooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { change } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\n\r\nclass VolumeProfileBySessionChart extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.saveNode = this.saveNode.bind(this);\r\n\t\tthis.resetYDomain = this.resetYDomain.bind(this);\r\n\t\tthis.handleReset = this.handleReset.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tthis.setState({\r\n\t\t\tsuffix: 1\r\n\t\t});\r\n\t}\r\n\tsaveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tresetYDomain() {\r\n\t\tthis.node.resetYDomain();\r\n\t}\r\n\thandleReset() {\r\n\t\tthis.setState({\r\n\t\t\tsuffix: this.state.suffix + 1\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst changeCalculator = change();\r\n\r\n\t\tconst { type, data: initialData, width, height, ratio } = this.props;\r\n\t\tconst priceChartHeight = height * 0.72;\r\n\t\tconst volChartHeight = priceChartHeight / 2.5;\r\n\t\tconst indexChartHeight = height * 0.26;\r\n\t\tconsole.log('height', height, priceChartHeight, volChartHeight, indexChartHeight);\r\n\r\n\t\tconst smaVolume50 = sma()\r\n\t\t\t.id(3)\r\n\t\t\t.options({ windowSize: 50, sourcePath: \"volumn\" })\r\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\r\n\t\t\t.accessor(d => d.smaVolume50);\r\n\r\n\t\t// const calculatedData = changeCalculator(initialData);\r\n\t\tconst calculatedData = smaVolume50(initialData);\r\n\t\t// console.log('data', initialData, calculatedData, changeCalculator)\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\tconst start = xAccessor(last(data))+1;\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\t\tconsole.log(\"xextend\", xExtents)\r\n\r\n\t\tconst f = scaleOrdinal(schemeCategory10)\r\n\t\t\t.domain(set(data.map(d => d.region)));\r\n\r\n\t\tconst fill = (d, i) => (i==0)?'#6BA583':(i==1)?'#FF0000':'#A9A9B0';\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ref={this.saveNode} height={height}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\t// margin={{ left: 80, right: 80, top: 10, bottom: 30 }}\r\n\t\t\t\tmargin={{ left: 1, right: 40, top: 1, bottom: 1 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName={`MSFT_${this.state.suffix}`}\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<Chart id={1} height={priceChartHeight}\r\n\t\t\t\t\tyExtents={[d => [d.high, d.low]]}\r\n\t\t\t\t\t// padding={{ top: 40, bottom: 20 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} />\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\r\n\t\t\t\t\t{/* <MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} /> */}\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t{/* <VolumeProfileSeries bySession orient=\"right\" showSessionBackground\r\n\t\t\t\t\t /> */}\r\n\r\n\t\t\t\t\t<CandlestickSeries />\r\n\t\t\t\t\t<LineSeries yAccessor={d => d.fitval} stroke=\"blue\" \r\n\t\t\t\t\t\tdefined={d => !isNaN(null) && (d !== null) }/>\r\n\t\t\t\t\t<LineSeries yAccessor={d => d.fitCurve} stroke=\"red\" \r\n\t\t\t\t\t\tdefined={d => !isNaN(null) && (d !== null) }/>\r\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\r\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/>\r\n\r\n\t\t\t\t\t<OHLCTooltip origin={[0, 10]} />\r\n\t\t\t\t\t<ZoomButtons\r\n\t\t\t\t\t\tonReset={this.handleReset}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<Chart id={2}\r\n\t\t\t\t\tyExtents={[0, d => d.volumn]}\r\n\t\t\t\t\theight={volChartHeight} origin={(w, h) => [0, priceChartHeight - volChartHeight]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\r\n\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t{/* <BarSeries yAccessor={d => d.volume}\r\n\t\t\t\t\t\t// widthRatio={0.95}\r\n\t\t\t\t\t\t// opacity={0.3}\r\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<StackedBarSeries \r\n\t\t\t\t\t\tyAccessor={[d => d.buyVol, d => d.sellVol, d => d.unkVol]}\r\n\t\t\t\t\t\tfill={fill}\r\n\t\t\t\t\t\twidthRatio={0.8}\r\n\t\t\t\t\t\topacity={0.3}\r\n\t\t\t\t\t\t// fill={['#ff0000', '#00ff00', '#0000ff']}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<Chart id={3}\r\n\t\t\t\t\tyExtents={[0, 100]}\r\n\t\t\t\t\theight={indexChartHeight} origin={(w, h) => [0, priceChartHeight+1]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\r\n\t\t\t\t\t{/* <YAxis axisAt=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\ttickValues={[30, 50, 70]}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* <MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} /> */}\r\n\r\n\t\t\t\t\t<RSISeries yAccessor={d => d.volRsi} \r\n\t\t\t\t\t\toverSold='75' overBought='25' middle='50'\r\n\t\t\t\t\t\tstroke={{insideThreshold:'#d60dd6'}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<RSITooltip origin={[0, 15]}\r\n\t\t\t\t\t\tyAccessor={d => d.volRsi}\r\n\t\t\t\t\t\toptions={{windowSize:14}} />\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nVolumeProfileBySessionChart.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nVolumeProfileBySessionChart.defaultProps = {\r\n\ttype: \"svg\",\r\n\theight: 600,\r\n};\r\nVolumeProfileBySessionChart = fitWidth(VolumeProfileBySessionChart);\r\n\r\nexport default VolumeProfileBySessionChart;\r\n","\r\nimport io from 'socket.io-client'\r\n\r\nconst _URL = 'http://localhost:5000'\r\n\r\nconst _dopost = (endpoint, body=null) => {\r\n    const opts = {method: 'POST'}\r\n    if (body != null) {\r\n        opts['headers'] = { 'Content-Type': 'application/json' }\r\n        opts['body'] = JSON.stringify(body)\r\n    }\r\n    return fetch(_URL + endpoint, opts)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.status != 'ok') {\r\n                console.error('Error', data);\r\n                return null;\r\n            }\r\n            else {\r\n                // console.log(\"OK\", data.payload)\r\n                return data.payload\r\n            }\r\n        })\r\n}\r\n\r\nconst getGroupTickets = () => {\r\n    return _dopost('/grouped-tickets')\r\n}\r\n\r\nconst getFocusTickets = (tillDate) => {\r\n    return _dopost('/focus-tickets', {tillDate})\r\n}\r\n\r\nconst getTicketPrice = (tic, tillDate, refetch) => {\r\n    return _dopost('/abv-test', {tic, tillDate, refetch})\r\n}\r\n\r\nconst favoriteTicket = (tic, op) => {\r\n    return _dopost('/favorite', {tic, op})\r\n}\r\n\r\nconst updatePrice = (refetch,tillDate=1) => {\r\n    return _dopost('/update-intra', {tillDate:tillDate,refetch:refetch})\r\n}\r\n\r\nlet _WS = null\r\nconst ws_open = () => {\r\n    if (_WS == null || !_WS.connected) _WS = io(_URL+'/test')\r\n    return _WS\r\n}\r\n\r\nexport {getGroupTickets, getTicketPrice, favoriteTicket,\r\n    getFocusTickets, updatePrice,\r\n    ws_open}","\r\nimport React from \"react\";\r\nimport Chart from './Chart';\r\n\r\nimport {ws_open} from '../../connectors/api'\r\n\r\nconst green_color = [\r\n\t'#D8F5D1',\r\n\t'#CDFFCC',\r\n\t'#B0F5AB',\r\n\t'#90EF90',\r\n\t'#6EF55C',\r\n\t'#4AFF37',\r\n];\r\nconst red_color = [\r\n\t'#FCD5D6',\r\n\t'#FFCCCB',\r\n\t'#FC94A1',\r\n\t'#FC6C85',\r\n\t'#FC5F73',\r\n\t'#FF5C46',\r\n]\r\nconst gray_color = '#DFDADA';\r\n\r\n  \r\nconst TodayChart = ({ticket, data}) => {\r\n\r\n  // const getData = () => {\r\n  //   const requestOptions = {\r\n  //     method: 'POST',\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({ tic: ticket })\r\n  //   };\r\n  //   console.log('getData .......', ticket)\r\n  //   r = await fetch('http://localhost:5000/today-test', requestOptions)\r\n  //     .then(response => response.json())\r\n  //     .then(data => {\r\n  //       if (data.status != 'ok') {\r\n  //         console.error('Error', data);\r\n  //         return null;\r\n  //       }\r\n  //       else {\r\n  //         console.log(\"OK\", data.payload)\r\n  //         // onFetched();\r\n  //         return data.payload.map( d => {d.date = new Date(d.time * 1000); return d});\r\n  //       }\r\n  //     })\r\n  //   return r;\r\n  // }\r\n\r\n  const fill = (d, i) => {\r\n    // console.log('fill',d,i); \r\n    // return d.buy==0 ? '#ff0000' : d.buy==1 ? '#00ff00' : '#0000ff'\r\n    if (d.buy==0) return red_color[d.weight]; \r\n    if (d.buy==1) return green_color[d.weight]; \r\n    return gray_color;\r\n  };\r\n\r\n  console.log('Start TodayChart', ticket, data);\r\n\r\n  // const data = React.useMemo(() => getData(ticket), [])\r\n\r\n  return <Chart  type=\"hybrid\" width={1200} height={500} ratio={1.5} data={data} />\r\n  // return <Chart  type=\"hybrid\" width={400} height={200} ratio={1.5} data={data} />\r\n}\r\n\r\nconst Today = () => {\r\n  const [data, setData] = React.useState(null)\r\n  const [state, _setState] = React.useState({ticket:'', waiting: false})\r\n\r\n  const [socket, setSocket] = React.useState(null);\r\n\r\n  // const setState = (obj) => {\r\n  //   let newState = Object.assign({}, state, obj)\r\n  //   console.log(\"newstate\", obj, newState)\r\n  //   _setState(newState)\r\n  // }\r\n  const setState = (obj) => {\r\n    // console.log(\"set State\", obj, state);\r\n    _setState(st => Object.assign({}, st, obj))\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setState({ticket: event.target.value.toUpperCase()})\r\n  }\r\n\r\n  const getData = (event, live) => {\r\n    event.preventDefault();\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ tic: state.ticket, tillDate:0, refetch: live, refresh:1})\r\n    };\r\n    console.log('getData .......', state.ticket)\r\n    setState({waiting:true})\r\n    // fetch('http://localhost:5000/today-test', requestOptions)\r\n    fetch('http://localhost:5000/abv-test', requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.status != 'ok') {\r\n          console.error('Error', data);\r\n          setData(null);\r\n        }\r\n        else {\r\n          console.log(\"OK\", data.payload)\r\n          // onFetched();\r\n          setData(data.payload.map( d => {\r\n            d.date = new Date(d.time * 1000); \r\n            d.volume = d.volumn;\r\n            return d\r\n          }))\r\n        }\r\n      })\r\n      .finally(() => setState({waiting:false}))\r\n  }\r\n\r\n\r\n  // const onSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   console.log('submiting xx', state.ticket)\r\n  //   setSubTicket(state.ticket)\r\n  // }\r\n\r\n  // const onRenderDone = React.useCallback(() => {\r\n  //   setState({waiting: false})\r\n  // }, [])\r\n\r\n  console.log('start Today')\r\n\r\n  // React.useEffect(() => {\r\n  //   const newSocket = ws_open();\r\n  //   newSocket.on('my_response', (msg) => console.log(\"WS reponse\", msg))\r\n  //   setSocket(newSocket);\r\n  //   return () => newSocket.close();\r\n  // }, [setSocket]);\r\n  // const testMe = () => {\r\n  //   console.log(\"sending\");\r\n  //   socket.emit('my_event', {data:'my data here'})\r\n  // }\r\n\r\n  return <div>\r\n    {/* { socket ? <button onClick={testMe}>Clickme</button> : <div>Not connected</div>} */}\r\n    <form onSubmit={(e) => getData(e,0)} >\r\n      <fieldset>\r\n        <label>\r\n          <p>Ticket</p>\r\n          <input name=\"tic\" value={state.ticket} onChange={handleChange} />\r\n        </label>\r\n      </fieldset>\r\n      <button type=\"submit\" disabled={state.waiting} >Submit</button>\r\n    </form>\r\n    <button onClick={(e) => getData(e,1)}>Live Data</button>\r\n    {data == null ? null : <TodayChart data={data} ticket={state.ticket} />}\r\n  </div>\r\n}\r\n\r\n\r\nexport default Today;\r\n","\r\nimport { useState } from \"react\"\r\n\r\nconst Header = ({groups, onClick}) => {\r\n    const [state, _setState] = useState({activeTab:''})\r\n    const setState = (obj) => {\r\n        // console.log(\"set State\", obj, state);\r\n        _setState(st => Object.assign({}, st, obj))\r\n    }\r\n\r\n    const onTabClick = (tab) => {\r\n        setState({activeTab: tab})\r\n        onClick(tab)\r\n        // console.log(\"Header clicked\", state)\r\n    }\r\n\r\n    console.log(\"Header\", groups, onClick)\r\n\r\n    return (\r\n        <ol className=\"tab-list\">\r\n            {groups.map((grp) => {\r\n                let className = 'tab-list-item'\r\n                if (state.activeTab == grp) className += ' tab-list-active';\r\n                return (\r\n                    <li className={className}\r\n                        key={grp}\r\n                        onClick={() => onTabClick(grp)}>{grp}</li>\r\n                );\r\n            })}\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default Header;","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\n\r\nimport { set } from \"d3-collection\";\r\nimport { scaleOrdinal, schemeCategory10, scalePoint } from  \"d3-scale\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tStackedBarSeries,\r\n\tCandlestickSeries,\r\n\tLineSeries,\r\n\tAreaSeries,\r\n\tRSISeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n\tEdgeIndicator,\r\n} from \"react-stockcharts/lib/coordinates\";\r\nimport { ema, rsi, sma, atr } from \"react-stockcharts/lib/indicator\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n\tRSITooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { change } from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\n\r\nimport {getTicketPrice, favoriteTicket} from '../../connectors/api'\r\n\r\nclass MiniChart extends React.Component {\r\n\t// state = {initialData: null};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconsole.log(\"Creating Chart\", this.props.ticket)\r\n\t\tthis.state = {initialData: null}\r\n\t\t// this.refresh()\r\n\t}\r\n\r\n\trefresh(refetch) {\r\n\t\tconst { ticket, getLive } = this.props\r\n        console.log(\"refreshing\", ticket)\r\n        getTicketPrice(ticket, getLive?0:1, refetch).then(data => this.setState({initialData:data.map( d => {\r\n\t\t\td.date = new Date(d.time * 1000); \r\n\t\t\treturn d\r\n\t\t})}))\r\n    }\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refresh(0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(\"Rendering\", this.props)\r\n\t\tconst initialData = this.state.initialData\r\n\t\tif (initialData == null) {\r\n\t\t\t// this.refresh();\r\n\t\t\treturn <div>Wating</div>;\r\n\t\t}\r\n\r\n\t\t// const { type, ticket, data: initialData, width, height, ratio } = this.props;\r\n\t\tconst { type, ticket, isFav, socket, width, height, ratio } = this.props;\r\n\t\tconst priceChartHeight = height * 0.72;\r\n\t\tconst volChartHeight = priceChartHeight / 2.5;\r\n\t\tconst indexChartHeight = height * 0.26;\r\n\r\n\t\tconsole.log(\"MiniChart\", ticket, initialData)\r\n\r\n\t\tconst smaVolume50 = sma()\r\n\t\t\t.id(3)\r\n\t\t\t.options({ windowSize: 50, sourcePath: \"volumn\" })\r\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\r\n\t\t\t.accessor(d => d.smaVolume50);\r\n\r\n\t\t// const calculatedData = changeCalculator(initialData);\r\n\t\tconst calculatedData = smaVolume50(initialData);\r\n\t\t// console.log('data', initialData, calculatedData, changeCalculator)\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\tconst start = xAccessor(last(data)) + 1;\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 81)]);\r\n\t\tconst xExtents = [start, end];\r\n\r\n\t\tconst f = scaleOrdinal(schemeCategory10)\r\n\t\t\t.domain(set(data.map(d => d.region)));\r\n\r\n\t\tconst fill = (d, i) => (i==0)?'#6BA583':(i==1)?'#FF0000':'#A9A9B0';\r\n\r\n\t\tconst favUpdate = () => {\r\n\t\t\tsocket.emit('appdb',\r\n\t\t\t\t\t\t{op: isFav ? 'delFavorite' : 'addFavorite',\r\n\t\t\t\t\t\tparams:{tic:ticket}});\r\n\t\t}\r\n\r\n\t\treturn (<div>\r\n\t\t\t<label>{ticket}</label>\r\n\t\t\t{/* <button onClick={() => favoriteTicket(ticket,isFav?'remove':'add')}>{isFav ? 'Unfavor':'Favor'}</button> */}\r\n\t\t\t<button onClick={favUpdate}>{isFav ? 'Unfavor':'Favor'}</button>\r\n\t\t\t<button onClick={() => this.refresh(1)}>Live Data</button>\r\n\r\n\t\t\t<ChartCanvas height={height}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\tmargin={{ left: 1, right: 10, top: 1, bottom: 1 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName={ticket}\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<Chart id={1} height={priceChartHeight}\r\n\t\t\t\t\tyExtents={[d => [d.high, d.low]]}\r\n\t\t\t\t\t// padding={{ top: 40, bottom: 20 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} />\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\r\n\t\t\t\t\t{/* <MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} /> */}\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\r\n\t\t\t\t\t<CandlestickSeries />\r\n\t\t\t\t\t<LineSeries yAccessor={d => d.fitval} stroke=\"blue\" \r\n\t\t\t\t\t\tdefined={d => !isNaN(null) && (d !== null) }/>\r\n\t\t\t\t\t<LineSeries yAccessor={d => d.fitCurve} stroke=\"red\" \r\n\t\t\t\t\t\tdefined={d => !isNaN(null) && (d !== null) }/>\r\n\t\t\t\t\t{/* <EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\r\n\t\t\t\t\t\tyAccessor={d => d.close} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}/> */}\r\n\r\n\t\t\t\t\t<OHLCTooltip origin={[0, 10]} />\r\n\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<Chart id={2}\r\n\t\t\t\t\tyExtents={[0, d => d.volumn]}\r\n\t\t\t\t\theight={volChartHeight} origin={(w, h) => [0, priceChartHeight - volChartHeight]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\r\n\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t{/* <BarSeries yAccessor={d => d.volumn}\r\n\t\t\t\t\t\t// widthRatio={0.95}\r\n\t\t\t\t\t\t// opacity={0.3}\r\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<StackedBarSeries \r\n\t\t\t\t\t\tyAccessor={[d => d.buyVol, d => d.sellVol, d => d.unkVol]}\r\n\t\t\t\t\t\tfill={fill}\r\n\t\t\t\t\t\twidthRatio={0.8}\r\n\t\t\t\t\t\topacity={0.3}\r\n\t\t\t\t\t\t// fill={['#ff0000', '#00ff00', '#0000ff']}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<Chart id={3}\r\n\t\t\t\t\tyExtents={[0, 100]}\r\n\t\t\t\t\theight={indexChartHeight} origin={(w, h) => [0, priceChartHeight+1]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\r\n\t\t\t\t\t{/* <YAxis axisAt=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\ttickValues={[30, 50, 70]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} /> */}\r\n\r\n\t\t\t\t\t<RSISeries yAccessor={d => d.volRsi} \r\n\t\t\t\t\t\toverSold={100} overBought={0} middle={50}\r\n\t\t\t\t\t\tstroke={{insideThreshold:'#d60dd6'}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<RSITooltip origin={[0, 15]}\r\n\t\t\t\t\t\tyAccessor={d => d.volRsi}\r\n\t\t\t\t\t\toptions={{windowSize:14}} />\r\n\t\t\t\t</Chart>\r\n\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t</ChartCanvas>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nMiniChart.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nMiniChart.defaultProps = {\r\n\ttype: \"svg\",\r\n\theight: 600,\r\n};\r\nMiniChart = fitWidth(MiniChart);\r\n\r\nexport default MiniChart;\r\n","\r\nimport React from 'react'\r\nimport Chart from './Chart'\r\nimport { getTicketPrice } from '../../connectors/api'\r\n\r\nconst MultiChart = ({tickets, favorites, socket, getLive}) => {\r\n    const [data, _setData] = React.useState({})\r\n    console.log(\"MultiChart\", tickets)\r\n    const setData = (key, prices) => {\r\n        let obj = {};\r\n        obj[key] = prices;\r\n        console.log(\"Updating\", obj)\r\n        _setData(st => Object.assign({}, st, obj))\r\n    }\r\n\r\n    // const refresh = (ticket) => {\r\n    //     console.log(\"refreshing\", ticket)\r\n    //     getTicketPrice(ticket).then(d => setData(ticket,d))\r\n    // }\r\n\r\n    // React.useEffect(() => {\r\n    //     tickets.map(ticket => refresh(ticket))\r\n    // }, [])\r\n\r\n    // return (<div>\r\n    //     {Object.keys(data).map(ticket => {\r\n    //         return <Chart key={ticket} ticket={ticket} data={data[ticket]}></Chart>\r\n    //     })}\r\n    // </div>)\r\n    return (<div>\r\n        {tickets.map(ticket => {\r\n            return <Chart key={ticket} ticket={ticket} isFav={favorites.includes(ticket)}\r\n                socket={socket} getLive={getLive}\r\n                type=\"hybrid\" width={600} height={300} ratio={1.5}\r\n            ></Chart>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nexport default MultiChart;","import { useState, useEffect } from \"react\"\r\n\r\nimport {getGroupTickets, getFocusTickets, updatePrice, ws_open} from '../../connectors/api'\r\nimport Header from \"./Header\"\r\nimport MultiChart from './MultiChart'\r\nimport './Group.css'\r\n\r\nconst _FAV_ = '* Favorites *'\r\nconst _FOCUS_ = '* Focus *'\r\n\r\nconst Today = () => {\r\n    const [groups, _setGroup] = useState({})\r\n    const [groupNames, _setGroupName] = useState([])\r\n    const [state, _setState] = useState({\r\n        waiting: true,\r\n        logmsg: '',\r\n        activeTab: '',\r\n        getLive: false,\r\n        refetchHistory: false,\r\n    })\r\n    const [socket, setSocket] = useState(null);\r\n    const [appdb, setAppdb] = useState(null);\r\n\r\n    // const setState = (obj) => {\r\n    //   let newState = Object.assign({}, state, obj)\r\n    //   console.log(\"newstate\", obj, newState)\r\n    //   _setState(newState)\r\n    // }\r\n    const setState = (obj) => {\r\n        _setState(st => Object.assign({}, st, obj))\r\n        // console.log(\"set State\", obj, state);\r\n    }\r\n    const setGroup = (obj) => {\r\n        // console.log(\"set Group\", obj, state);\r\n        _setGroup(st => Object.assign({}, st, obj))\r\n        _setGroupName(st => [...new Set([...st,...Object.keys(obj)])])\r\n    }\r\n    const addGroup = (name, tickets) => {\r\n        let obj={}; obj[name] = tickets;\r\n        _setGroup(st => Object.assign({}, st, obj))\r\n        // _setGroupName(st => [name].concat(st))\r\n        _setGroupName(st => [...new Set([name,...st,])])\r\n    }\r\n\r\n    const onClickTabItem = (tab) => {\r\n        if (tab === _FOCUS_) {\r\n            getFocusTickets(state.getLive?0:1).then(tickets => {\r\n                addGroup(_FOCUS_, tickets);\r\n                setState({logmsg:'Fetched focus tickets'});\r\n                setState({activeTab: tab})\r\n            })\r\n        } else {\r\n            setState({activeTab: tab})\r\n        }\r\n    }\r\n\r\n    // fetch once\r\n    useEffect(() => {\r\n        setState({logmsg:'Fetching ticket groups...'})\r\n        getGroupTickets()\r\n            .then(grp => {\r\n                setGroup(grp)\r\n                setState({logmsg:'Groups fetched'})\r\n            })\r\n            .catch(err => setState({logmsg:`Failed to fetch ticket group: ${err}`}))\r\n            .finally(() => setState({waiting: false}))\r\n        // favoriteTicket('','get')\r\n        //     .then(fav => {\r\n        //         addGroup(_FAV_, fav)\r\n        //         console.log(\"FAV\", fav)\r\n        //     })\r\n        const newWs = ws_open();\r\n        console.log(\"WS opened\")\r\n        newWs.on('appdb', (msg) => {\r\n            console.log(\"WS on appdb\", msg)\r\n            addGroup(_FAV_, msg.fav)\r\n            addGroup(_FOCUS_, [])\r\n            setAppdb(msg)\r\n        })\r\n        newWs.emit('appdb', {op:'get',params:{}})\r\n        setSocket(newWs)\r\n        return () => newWs.close()\r\n    }, [setSocket])\r\n\r\n    // const testMe = () => {\r\n    //     fetch('http://localhost:5000/favorite', {method: 'POST',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.stringify({tic: 'DEF', add:0})\r\n    //     })\r\n    //     .then(response => console.log(response.json()))\r\n    // }\r\n    \r\n    return <div>\r\n        <label>{state.logmsg}</label>\r\n        <button onClick={() => {\r\n            console.log(\"updating\", state);\r\n            updatePrice(state.refetchHistory, state.getLive?0:1)}\r\n        }>Update</button>\r\n        <label>\r\n        <input type='checkbox' checked={state.getLive} \r\n            onChange={() => setState({getLive:!state.getLive})}></input>\r\n            Get Live\r\n        </label>\r\n        <label>\r\n        <input type='checkbox' checked={state.refetchHistory} \r\n            onChange={() => setState({refetchHistory:!state.refetchHistory})}></input>\r\n            Refetch\r\n        </label>\r\n        <hr/>\r\n        \r\n        <Header groups={groupNames} onClick={onClickTabItem}/>\r\n        {(state.activeTab === '') ? null :\r\n            <MultiChart tickets={groups[state.activeTab]}\r\n                socket={socket} \r\n                favorites={groups[_FAV_]}\r\n                getLive={state.getLive}></MultiChart>}\r\n        {/* <div className=\"tab-content\">\r\n          {state.groups.map((grp) => {\r\n                if (grp !== state.activeTab) return undefined;\r\n                return child.props.children;\r\n          })}\r\n        </div> */}\r\n    </div>\r\n}\r\n  \r\nexport default Today;\r\n  ","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { ChartCanvas, Chart, ZoomButtons } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tCandlestickSeries,\r\n} from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n\tOHLCTooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\n\r\nclass CandleStickChartWithZoomPan extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.saveNode = this.saveNode.bind(this);\r\n\t\tthis.resetYDomain = this.resetYDomain.bind(this);\r\n\t\tthis.handleReset = this.handleReset.bind(this);\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tthis.setState({\r\n\t\t\tsuffix: 1\r\n\t\t});\r\n\t}\r\n\tsaveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tresetYDomain() {\r\n\t\tthis.node.resetYDomain();\r\n\t}\r\n\thandleReset() {\r\n\t\tthis.setState({\r\n\t\t\tsuffix: this.state.suffix + 1\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { type, width, ratio } = this.props;\r\n\t\tconst { mouseMoveEvent, panEvent, zoomEvent, zoomAnchor } = this.props;\r\n\t\tconst { clamp } = this.props;\r\n\t\tconsole.log('props', this.props, zoomAnchor)\r\n\r\n\t\tconst { data: initialData } = this.props;\r\n\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(initialData);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\r\n\t\tconst margin = { left: 70, right: 70, top: 20, bottom: 30 };\r\n\r\n\t\tconst height = 400;\r\n\r\n\t\tconst gridHeight = height - margin.top - margin.bottom;\r\n\t\tconst gridWidth = width - margin.left - margin.right;\r\n\r\n\t\tconst showGrid = true;\r\n\t\tconst yGrid = showGrid ? { innerTickSize: -1 * gridWidth, tickStrokeOpacity: 0.2 } : {};\r\n\t\tconst xGrid = showGrid ? { innerTickSize: -1 * gridHeight, tickStrokeOpacity: 0.2 } : {};\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas ref={this.saveNode} height={height}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tmargin={{ left: 70, right: 70, top: 10, bottom: 30 }}\r\n\r\n\t\t\t\tmouseMoveEvent={mouseMoveEvent}\r\n\t\t\t\tpanEvent={panEvent}\r\n\t\t\t\tzoomEvent={zoomEvent}\r\n\t\t\t\tclamp={clamp}\r\n\t\t\t\tzoomAnchor={zoomAnchor}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName={`MSFT_${this.state.suffix}`}\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Chart id={1}\r\n\t\t\t\t\tyExtents={d => [d.high, d.low]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tzoomEnabled={zoomEvent}\r\n\t\t\t\t\t\t{...xGrid} />\r\n\t\t\t\t\t<YAxis axisAt=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tticks={5}\r\n\t\t\t\t\t\tzoomEnabled={zoomEvent}\r\n\t\t\t\t\t\t{...yGrid}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<CandlestickSeries />\r\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\r\n\t\t\t\t\t<ZoomButtons\r\n\t\t\t\t\t\tonReset={this.handleReset}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<Chart id={2}\r\n\t\t\t\t\tyExtents={d => d.volume}\r\n\t\t\t\t\theight={150} origin={(w, h) => [0, h - 150]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<YAxis\r\n\t\t\t\t\t\taxisAt=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tticks={5}\r\n\t\t\t\t\t\ttickFormat={format(\".2s\")}\r\n\t\t\t\t\t\tzoomEnabled={zoomEvent}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"left\"\r\n\t\t\t\t\t\torient=\"left\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")} />\r\n\r\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={(d) => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCandleStickChartWithZoomPan.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleStickChartWithZoomPan.defaultProps = {\r\n\ttype: \"svg\",\r\n\tmouseMoveEvent: true,\r\n\tpanEvent: true,\r\n\tzoomEvent: true,\r\n\tclamp: false,\r\n};\r\n\r\nCandleStickChartWithZoomPan = fitWidth(CandleStickChartWithZoomPan);\r\n\r\nexport default CandleStickChartWithZoomPan;\r\n","\r\n\r\nimport { tsvParse, csvParse } from  \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\nfunction parseData(parse) {\r\n\treturn function(d) {\r\n\t\td.date = parse(d.date);\r\n\t\td.open = +d.open;\r\n\t\td.high = +d.high;\r\n\t\td.low = +d.low;\r\n\t\td.close = +d.close;\r\n\t\td.volume = +d.volume;\r\n\r\n\t\treturn d;\r\n\t};\r\n}\r\n\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n\r\nexport function getData() {\r\n\tconst promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\r\n\t\t.then(response => response.text())\r\n\t\t.then(data => tsvParse(data, parseData(parseDate)))\r\n\treturn promiseMSFT;\r\n}\r\n","\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { getData } from \"./utils\"\r\n\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\n\r\nexport default class ChartComponent extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tgetData().then(data => {\r\n\t\t\tthis.setState({ data })\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tif (this.state == null) {\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<TypeChooser>\r\n\t\t\t\t{type => <Chart type={type} data={this.state.data} />}\r\n\t\t\t</TypeChooser>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// render(\r\n// \t<ChartComponent />,\r\n// \tdocument.getElementById(\"root\")\r\n// );\r\n","import logo from './logo.svg';\nimport './App.css';\n// import TestLine from './charts/TestLine';\n// import Intraday from './charts/Intraday';\n// import Extdev from './charts/Extdev';\n// import LineChart from './charts/Chartjs';\n// import Intra from './charts/Intra';\n// import Intra from './charts/Intra_combine';\nimport Daily from './charts/Daily';\nimport Today from './charts/today/Today';\nimport Group from './charts/groups/Group';\n\n// import ChartComponent from './charts/SChart/index';\n// import ChartComponent from './charts/SChart/Area/index';\n// import ChartComponent from './charts/SChart/StackedBar/index';\nimport ChartComponent from './charts/SChart/Candle/index';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    // <div>\n    //   <div className=\"App\">\n    //     <Intra/>\n    //     <Daily/>\n    //     <Schart/>\n    //     <Example/>\n    //   </div>\n\n    // </div>\n    <Router>\n      <div>\n        {/* <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/intra\">Intra</Link>\n          </li>\n        </ul>\n\n        <hr /> */}\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Daily />\n          </Route>\n          {/* <Route path=\"/intra\">\n            <Intra />\n          </Route> */}\n          <Route path=\"/test\">\n            <ChartComponent />\n          </Route>\n          <Route path=\"/today\">\n            <Today />\n          </Route>\n          <Route path=\"/group\">\n            <Group />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}